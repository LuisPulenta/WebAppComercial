@page "/ivas/create"
@attribute [Authorize(Roles = "Admin")]
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService swal

<h3>Crear Iva</h3>

<IvaForm @ref="ivaForm" Iva="iva" OnValidSubmit="CreateAsync" ReturnAction="Return" />

@code {
    private Iva iva = new();
    private IvaForm? ivaForm;

    private async Task CreateAsync()
    {
        var httpResponse = await repository.Post("/api/ivas", iva);
        if (httpResponse.Error)
        {
            var message = await httpResponse.GetErrorMessage();
            await swal.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }
        var toast = swal.Mixin(new SweetAlertOptions
            {
                Toast = true,
                Position = SweetAlertPosition.Center,
                ShowConfirmButton = true,
                Timer = 3000
            });
        await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Iva creado con éxito.");
        Return();
    }

    private void Return()
    {
        ivaForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/ivas");
    }
}
