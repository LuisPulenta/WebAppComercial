@page "/buys/create"
@attribute [Authorize(Roles = "Admin")]
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService swal

<h3>Crear Compra</h3>

<BuyForm @ref="buyForm" BuyDTO="buyDTO" OnValidSubmit="CreateAsync" ReturnAction="Return" />

@code {
    private BuyDTO buyDTO = new();
    private BuyForm? buyForm;

    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; } = default!;

    private async Task CreateAsync()
    {
        // var httpResponse = await repository.Post("/api/buys", buyDTO);
        // if (httpResponse.Error)
        // {
        //     var message = await httpResponse.GetErrorMessage();
        //     await swal.FireAsync("Error", message, SweetAlertIcon.Error);
        //     return;
        // }
        // var toast = swal.Mixin(new SweetAlertOptions
        //     {
        //         Toast = true,
        //         Position = SweetAlertPosition.Center,
        //         ShowConfirmButton = true,
        //         Timer = 3000
        //     });
        // await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Compra creada con éxito.");
        // await BlazoredModal.CloseAsync(ModalResult.Ok());
        // Return();
    }

    private void Return()
    {
        buyForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/buys");
    }
}
